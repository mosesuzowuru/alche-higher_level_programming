# Fix Task 2: Print alphabet (one print function, one loop, no variables)
cat > python-if_else_loops_functions/2-print_alphabet.py << 'EOF'
#!/usr/bin/python3
for i in range(26):
    print("{}".format(chr(ord('a') + i)), end="")
EOF

# Fix Task 3: Print alphabet except q and e (one print function, one loop, no variables)
cat > python-if_else_loops_functions/3-print_alphabt.py << 'EOF'
#!/usr/bin/python3
for i in range(26):
    if chr(ord('a') + i) not in "qe":
        print("{}".format(chr(ord('a') + i)), end="")
EOF

# Fix Task 4: Hexadecimal printing (one print function, one loop, no variables)
cat > python-if_else_loops_functions/4-print_hexa.py << 'EOF'
#!/usr/bin/python3
for i in range(99):
    print("{} = 0x{}".format(i, format(i, 'x')))
EOF

# Fix Task 5: 00...99 (max 2 print functions, one loop, no variables)
cat > python-if_else_loops_functions/5-print_comb2.py << 'EOF'
#!/usr/bin/python3
for i in range(100):
    if i == 99:
        print("{:02d}".format(i))
    else:
        print("{:02d}".format(i), end=", ")
EOF

# Fix Task 6: Combinations (max 3 print functions, max 2 loops, no variables)
cat > python-if_else_loops_functions/6-print_comb3.py << 'EOF'
#!/usr/bin/python3
for i in range(10):
    for j in range(i + 1, 10):
        if i == 8 and j == 9:
            print("{}{}".format(i, j))
        else:
            print("{}{}".format(i, j), end=", ")
EOF

# Make them executable
chmod +x python-if_else_loops_functions/2-print_alphabet.py
chmod +x python-if_else_loops_functions/3-print_alphabt.py  
chmod +x python-if_else_loops_functions/4-print_hexa.py
chmod +x python-if_else_loops_functions/5-print_comb2.py
chmod +x python-if_else_loops_functions/6-print_comb3.py
