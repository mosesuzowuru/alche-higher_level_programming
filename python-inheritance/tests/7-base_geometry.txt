The ``7-base_geometry`` module
============================

Using ``BaseGeometry``
---------------------

This is an example text file in reStructuredText format. First import
``BaseGeometry`` from the ``7-base_geometry`` module:

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Now use it:

    >>> bg = BaseGeometry()

Test area method:

    >>> bg.area()
    Traceback (most recent call last):
    Exception: area() is not implemented

Test integer_validator method:

    >>> bg.integer_validator("my_int", 12)
    >>> bg.integer_validator("width", 89)

Test with invalid types:

    >>> bg.integer_validator("name", "John")
    Traceback (most recent call last):
    TypeError: name must be an integer

    >>> bg.integer_validator("age", 0)
    Traceback (most recent call last):
    ValueError: age must be greater than 0

    >>> bg.integer_validator("distance", -4)
    Traceback (most recent call last):
    ValueError: distance must be greater than 0

Test with boolean:

    >>> bg.integer_validator("flag", True)
    Traceback (most recent call last):
    TypeError: flag must be an integer

Test with float:

    >>> bg.integer_validator("pi", 3.14)
    Traceback (most recent call last):
    TypeError: pi must be an integer

Test with None:

    >>> bg.integer_validator("none", None)
    Traceback (most recent call last):
    TypeError: none must be an integer

Test with list:

    >>> bg.integer_validator("list", [1, 2, 3])
    Traceback (most recent call last):
    TypeError: list must be an integer
