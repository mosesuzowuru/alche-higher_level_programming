#!/bin/bash

# Create the SQL_introduction directory (we're already in alche-higher_level_programming)
mkdir -p SQL_introduction
cd SQL_introduction

# 0. List databases
cat > 0-list_databases.sql << 'EOF'
SHOW DATABASES;
EOF

# 1. Create a database
cat > 1-create_database_if_missing.sql << 'EOF'
CREATE DATABASE IF NOT EXISTS hbtn_0c_0;
EOF

# 2. Delete a database
cat > 2-remove_database.sql << 'EOF'
DROP DATABASE IF EXISTS hbtn_0c_0;
EOF

# 3. List tables
cat > 3-list_tables.sql << 'EOF'
SHOW TABLES;
EOF

# 4. First table
cat > 4-first_table.sql << 'EOF'
CREATE TABLE IF NOT EXISTS first_table (
    id INT,
    name VARCHAR(256)
);
EOF

# 5. Full description
cat > 5-full_table.sql << 'EOF'
SHOW CREATE TABLE first_table;
EOF

# 6. List all in table
cat > 6-list_values.sql << 'EOF'
SELECT * FROM first_table;
EOF

# 7. First add
cat > 7-insert_value.sql << 'EOF'
INSERT INTO first_table (id, name) VALUES (89, 'Best School');
EOF

# 8. Count 89
cat > 8-count_89.sql << 'EOF'
SELECT COUNT(*) FROM first_table WHERE id = 89;
EOF

# 9. Full creation
cat > 9-full_creation.sql << 'EOF'
CREATE TABLE IF NOT EXISTS second_table (
    id INT,
    name VARCHAR(256),
    score INT
);
INSERT INTO second_table (id, name, score) VALUES 
(1, 'John', 10),
(2, 'Alex', 3),
(3, 'Bob', 14),
(4, 'George', 8);
EOF

# 10. List by best
cat > 10-top_score.sql << 'EOF'
SELECT score, name FROM second_table ORDER BY score DESC;
EOF

# 11. Select the best
cat > 11-best_score.sql << 'EOF'
SELECT score, name FROM second_table WHERE score >= 10 ORDER BY score DESC;
EOF

# 12. Cheating is bad
cat > 12-no_cheating.sql << 'EOF'
UPDATE second_table SET score = 10 WHERE name = 'Bob';
EOF

# 13. Score too low
cat > 13-change_class.sql << 'EOF'
DELETE FROM second_table WHERE score <= 5;
EOF

# 14. Average
cat > 14-average.sql << 'EOF'
SELECT AVG(score) AS average FROM second_table;
EOF

# 15. Number by score
cat > 15-groups.sql << 'EOF'
SELECT score, COUNT(*) AS number FROM second_table GROUP BY score ORDER BY number DESC;
EOF

# 16. Say my name
cat > 16-no_link.sql << 'EOF'
SELECT score, name FROM second_table WHERE name IS NOT NULL ORDER BY score DESC;
EOF

echo "✅ All SQL scripts have been created in SQL_introduction/"
echo "📁 Directory structure:"
ls -la

echo ""
echo "🚀 To test the scripts, use:"
echo "cat 0-list_databases.sql | mysql -hlocalhost -uroot -p"